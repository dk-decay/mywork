/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.biogen.organization.admin.drug.view;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.biogen.business.chem.model.Compound;
import org.biogen.business.common.Status;
import org.biogen.business.drug.model.Drug;
import org.biogen.organization.model.DrugManufactuer;
import org.biogen.user.model.BusinessUser;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author deveshkandpal
 */
public class DrugOrgAnalyticsDashboard extends javax.swing.JPanel {

    /**
     * Creates new form DrugOrgAnalyticsDashboard
     */
    private DrugManufactuer organization;
    
    private JPanel container;

    public DrugOrgAnalyticsDashboard(
            DrugManufactuer organization,
            JPanel container
    ) {
        initComponents();
        this.organization = organization;
        this.container = container;
        populateTable();
    }

    public void populateTable() {
        populateDrugStock();
        DefaultTableModel model = (DefaultTableModel) drugTable.getModel();
        model.setRowCount(0);

        organization.getDrugList()
                .stream()
                .filter(f -> f.getStatus() == Status.APPROVED)
                .forEach(d -> {

                    Object[] arr = new Object[1];
                    arr[0] = d;
                    model.addRow(arr);
                });

    }

    public void populateDrugStock() {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        organization.getDrugSynthesisOrderList()
                .stream()
                .forEach(a -> {

                    String name = a.getDrug().getName();
                    Integer val = a.getQuantity();

                    dataset.setValue(val, "Total Quantity", name);
                });

        JFreeChart chart = ChartFactory
                .createBarChart("Drug Stock",
                        "Drug Name",
                        "Drug Quantity", dataset,
                        PlotOrientation.VERTICAL,
                        false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartPanel f = new ChartPanel(chart);
        drugStockPanel.setLayout(new java.awt.BorderLayout());
        drugStockPanel.removeAll();
        drugStockPanel.add(f, BorderLayout.CENTER);
        drugStockPanel.validate();
        drugStockPanel.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        drugTable = new javax.swing.JTable();
        drugStockPanel = new javax.swing.JPanel();
        drugCompositionPanel = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        drugTable.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        drugTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        drugTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drugTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(drugTable);

        drugStockPanel.setBackground(new java.awt.Color(255, 255, 255));
        drugStockPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout drugStockPanelLayout = new javax.swing.GroupLayout(drugStockPanel);
        drugStockPanel.setLayout(drugStockPanelLayout);
        drugStockPanelLayout.setHorizontalGroup(
            drugStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 311, Short.MAX_VALUE)
        );
        drugStockPanelLayout.setVerticalGroup(
            drugStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 174, Short.MAX_VALUE)
        );

        drugCompositionPanel.setBackground(new java.awt.Color(255, 255, 255));
        drugCompositionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout drugCompositionPanelLayout = new javax.swing.GroupLayout(drugCompositionPanel);
        drugCompositionPanel.setLayout(drugCompositionPanelLayout);
        drugCompositionPanelLayout.setHorizontalGroup(
            drugCompositionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );
        drugCompositionPanelLayout.setVerticalGroup(
            drugCompositionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );

        backBtn.setText("back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(drugCompositionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(backBtn)
                        .addGap(43, 43, 43)
                        .addComponent(drugStockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(drugCompositionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(drugStockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(35, 35, 35))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void drugTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drugTableMouseClicked
        // TODO add your handling code here:

        int selectedRow = drugTable.getSelectedRow();
        if (selectedRow >= 0) {
            Drug d = (Drug) drugTable.getValueAt(selectedRow, 0);
            visualize(d);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a compound request to be deleted");
        }

    }//GEN-LAST:event_drugTableMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
         container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
        
        
    }//GEN-LAST:event_backBtnActionPerformed

    public void visualize(Drug d) {
        DefaultPieDataset pieDataSet = new DefaultPieDataset();
        d.getDrugCompositionCatalog()
                .getDrugCompositionList()
                .stream()
                .forEach(a -> {

                    String key = a.getCompound().getName();
                    Integer val = a.getUnit();
                    pieDataSet.setValue(key + " : " + val, val);

                });

        JFreeChart chart = ChartFactory.createPieChart("Drug Chemical Composition", pieDataSet);
        ChartPanel f = new ChartPanel(chart);

        drugCompositionPanel.setLayout(new java.awt.BorderLayout());
        drugCompositionPanel.removeAll();
        drugCompositionPanel.add(f, BorderLayout.CENTER);
        drugCompositionPanel.validate();
        drugCompositionPanel.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel drugCompositionPanel;
    private javax.swing.JPanel drugStockPanel;
    private javax.swing.JTable drugTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
