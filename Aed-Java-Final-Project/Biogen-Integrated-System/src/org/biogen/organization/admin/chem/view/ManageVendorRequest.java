/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.biogen.organization.admin.chem.view;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.biogen.business.drug.model.Item;
import org.biogen.business.drug.model.ItemOrder;
import org.biogen.business.enterprise.model.ChemicalManufacturingBusiness;
import org.biogen.ecosystem.model.Ecosystem;
import org.biogen.organization.admin.drug.view.EditAnticipatedInventoryPanel;
import org.biogen.organization.model.ChemicalManufacturer;
import org.biogen.organization.work.model.WorkRequest;
import org.biogen.organization.work.model.WorkRequestStatus;
import org.biogen.user.model.BusinessUser;
import org.biogen.work.attachment.model.AttachmentType;
import org.biogen.work.attachment.model.InventoryUpdateAttachment;

/**
 *
 * @author deveshkandpal
 */
public class ManageVendorRequest extends javax.swing.JPanel {

    /**
     * Creates new form ManageVendorRequest
     */
    private JPanel container;
    private Ecosystem system;
    private ChemicalManufacturer organization;
    private ChemicalManufacturingBusiness enterprise;
    private BusinessUser user;

    public ManageVendorRequest(
            JPanel container,
            Ecosystem system,
            ChemicalManufacturer organization,
            ChemicalManufacturingBusiness enterprise,
            BusinessUser user
    ) {
        initComponents();
        this.container = container;
        this.system = system;
        this.organization = organization;
        this.enterprise = enterprise;
        this.user = user;
        populateVendorRequestTable();
        populateOtherRequestTable();
    }

    public void populateOtherRequestTable() {
        DefaultTableModel model = (DefaultTableModel) otherVendorRequest.getModel();
        model.setRowCount(0);
        this.user.getWorkQueue().getWorkRequestList()
                .stream()
                .filter(work -> work.getStatus() == WorkRequestStatus.DENIED
                || work.getStatus() == WorkRequestStatus.CANCELLED
                || work.getStatus() == WorkRequestStatus.APPROVED)
                .forEach(wr -> {
                    Object[] arr = new Object[4];
                    arr[0] = wr;
                    arr[1] = wr.getAttachment().getAttachmentType();
                    arr[2] = wr.getStartDate();
                    arr[3] = wr.getStatus();
                    model.addRow(arr);
                });
    }

    public void populateVendorRequestTable() {
        DefaultTableModel model = (DefaultTableModel) vendorWorkRequestTable.getModel();
        model.setRowCount(0);
        this.user.getWorkQueue().getWorkRequestList()
                .stream()
                .filter(work -> work.getStatus() != WorkRequestStatus.DENIED
                && work.getStatus() != WorkRequestStatus.CANCELLED
                && work.getStatus() != WorkRequestStatus.APPROVED)
                .forEach(wr -> {
                    Object[] arr = new Object[4];
                    arr[0] = wr;
                    arr[1] = wr.getAttachment().getAttachmentType();
                    arr[2] = wr.getStartDate();
                    arr[3] = wr.getStatus();
                    model.addRow(arr);
                });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vendorWorkRequestTable = new javax.swing.JTable();
        viewDetailsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        otherVendorRequest = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Manage Vendor Request");

        vendorWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Type", "Start Date", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vendorWorkRequestTable);

        viewDetailsBtn.setText("View Details");
        viewDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsBtnActionPerformed(evt);
            }
        });

        backBtn.setText("back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        otherVendorRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Type", "Start Date", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(otherVendorRequest);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewDetailsBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(159, 159, 159)
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(backBtn)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewDetailsBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = vendorWorkRequestTable.getSelectedRow();
        if (selectedRow >= 0) {

            WorkRequest workRequest = (WorkRequest) vendorWorkRequestTable.getValueAt(selectedRow, 0);

            if (workRequest.getAttachment().getAttachmentType() == AttachmentType.InventoryUpdateAttachment) {
                InventoryUpdateAttachment attachment = (InventoryUpdateAttachment) workRequest.getAttachment();
                ApproveOrDenyWorkRequestPanel panel = new ApproveOrDenyWorkRequestPanel(container,
                        system, organization, enterprise, user, workRequest, attachment);
                CardLayout layout = (CardLayout) container.getLayout();
                container.add("ApproveOrDenyWorkRequestPanel", panel);
                layout.next(container);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please Select a compound request to be modified");
        }


    }//GEN-LAST:event_viewDetailsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable otherVendorRequest;
    private javax.swing.JTable vendorWorkRequestTable;
    private javax.swing.JButton viewDetailsBtn;
    // End of variables declaration//GEN-END:variables
}
